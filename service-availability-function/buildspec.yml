version: 0.2

phases:
  install:
    runtime-versions:
      dotnet: 3.1
    commands:
      - dotnet tool install -g Amazon.Lambda.Tools
  
  pre_build:
    commands:
      - echo Restore started on `date`
      - cd service-availability-function
      - dotnet clean
      - dotnet restore
      
  build:
    commands:
      - echo Build started on `date`
      - echo Build Number $CODEBUILD_BUILD_NUMBER
      - dotnet lambda package --configuration Release --framework netcoreapp3.1 --output-package bin/Release/netcoreapp3.1/$PROJECT_NAME-$CODEBUILD_START_TIME.zip
      - cp service-availability-function.template $PROJECT_NAME.template

  post_build:
    commands:
      - echo Copying code zip to S3
      - aws s3 cp bin/Release/netcoreapp3.1/$PROJECT_NAME-$CODEBUILD_START_TIME.zip s3://$BUCKET/$PROJECT_NAME-$CODEBUILD_START_TIME.zip --sse aws:kms --sse-kms-key-id $CODEBUILD_KMS_KEY_ID --acl bucket-owner-full-control
      - "json=\"{\\\"Parameters\\\" : { \\\"CodeBucket\\\" : \\\"$BUCKET\\\", \\\"CodeKey\\\" : \\\"$PROJECT_NAME-$CODEBUILD_START_TIME.zip\\\"} }\""
      - echo $json >> CloudFormationConfig.json

artifacts:
  name: BuildOutput
  base-directory: $CODEBUILD_SRC_DIR
  files:
    - service-availability-function/$PROJECT_NAME.template
    - service-availability-function/CloudFormationConfig.json
  discard-paths: yes  