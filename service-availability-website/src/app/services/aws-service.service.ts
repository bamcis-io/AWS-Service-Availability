import { Injectable } from '@angular/core';
import { AwsService } from './aws-service';

export interface IAwsServiceService {
    getAwsServices(): Promise<AwsService[]>;
}

@Injectable()
export class AwsServiceService implements IAwsServiceService {
    constructor() { }

    private AwsServices: AwsService[] = [
		    { name: "Amazon API Gateway", value: "apigateway" },
		    { name: "Amazon AppStream", value: "appstream" },
		    { name: "Amazon AppStream 2.0", value: "appstream2" },
		    { name: "Amazon Athena", value: "athena" },
		    { name: "Amazon Chime", value: "chime" },
		    { name: "Amazon CloudFront", value: "cloudfront" },
		    { name: "Amazon CloudSearch", value: "cloudsearch" },
		    { name: "Amazon CloudWatch", value: "cloudwatch" },
		    { name: "Amazon CloudWatch Events", value: "cloudwatchevents" },
		    { name: "Amazon Cognito", value: "cognito" },
		    { name: "Amazon Connect", value: "connect" },
		    { name: "Amazon Data Pipeline", value: "datapipeline" },
		    { name: "Amazon DynamoDB", value: "dynamodb" },
		    { name: "Amazon Elastic Compute Cloud", value: "ec2" },
		    { name: "Amazon Elastic Container Registry", value: "ecr" },
		    { name: "Amazon Elastic Container Service", value: "ecs" },
		    { name: "Amazon Elastic File System", value: "elasticfilesystem" },
		    { name: "Amazon Elastic Load Balancing", value: "elb" },
		    { name: "Amazon Elastic MapReduce", value: "emr" },
		    { name: "Amazon ElastiCache", value: "elasticache" },
		    { name: "Amazon Elasticsearch Service", value: "elasticsearch" },
		    { name: "Amazon Glacier", value: "glacier" },
		    { name: "Amazon Inspector", value: "inspector" },
		    { name: "Amazon Kinesis Analytics", value: "kinesisanalytics" },
		    { name: "Amazon Kinesis Data Streams", value: "kinesis" },
		    { name: "Amazon Kinesis Firehose", value: "firehose" },
		    { name: "Amazon Lex", value: "lex" },
		    { name: "Amazon Lightsail", value: "lightsail" },
		    { name: "Amazon Machine Learning", value: "aml" },
		    { name: "Amazon Mobile Analytics", value: "analytics" },
        { name: "Amazon Mobile Hub", value: "mobilehub" },
		    { name: "Amazon MQ", value: "mq" },
		    { name: "Amazon Pinpoint", value: "pinpoint" },
		    { name: "Amazon QuickSight", value: "quicksight" },
		    { name: "Amazon Redshift", value: "redshift" },
		    { name: "Amazon Relational Database Service", value: "rds" },
		    { name: "Amazon Route 53", value: "route53" },
		    { name: "Amazon Route53 Domain Registration", value: "route53domainregistration" },
		    { name: "Amazon Simple Email Service", value: "ses" },
		    { name: "Amazon Simple Notification Service", value: "sns" },
		    { name: "Amazon Simple Queue Service", value: "sqs" },
		    { name: "Amazon Simple Storage Service", value: "s3" },
		    { name: "Amazon Simple Workflow Service", value: "swf" },
		    { name: "Amazon SimpleDB", value: "simpledb" },
		    { name: "Amazon Transcribe", value: "transcribe" },
		    { name: "Amazon Virtual Private Cloud", value: "vpc" },
		    { name: "Amazon WorkMail", value: "workmail" },
		    { name: "Amazon WorkSpaces", value: "workspaces" },
		    { name: "Auto Scaling", value: "autoscaling" },
		    { name: "AWS AppSync", value: "appsync" },
		    { name: "AWS Backup", value: "backup" },
		    { name: "AWS Batch", value: "batch" },
		    { name: "AWS Billing Console", value: "billingconsole" },
		    { name: "AWS Certificate Manager", value: "certificatemanager" },
		    { name: "AWS Cloud9", value: "cloud9" },
		    { name: "AWS CloudFormation", value: "cloudformation" },
		    { name: "AWS CloudHSM", value: "cloudhsm" },
		    { name: "AWS CloudTrail", value: "cloudtrail" },
		    { name: "AWS CodeBuild", value: "codebuild" },
		    { name: "AWS CodeCommit", value: "codecommit" },
		    { name: "AWS CodeDeploy", value: "codedeploy" },
		    { name: "AWS CodePipeline", value: "codepipeline" },
		    { name: "AWS CodeStar", value: "codestar" },
		    { name: "AWS Config", value: "config" },
		    { name: "AWS Direct Connect", value: "directconnect" },
		    { name: "AWS Directory Service", value: "directoryservice" },
		    { name: "AWS Elastic Beanstalk", value: "elasticbeanstalk" },
		    { name: "AWS Glue", value: "glue" },
		    { name: "AWS Greengrass", value: "awsgreengrass" },
		    { name: "AWS Identity and Access Management", value: "iam" },
		    { name: "AWS Internet Connectivity", value: "internetconnectivity" },
		    { name: "AWS IoT Analytics", value: "iotanalytics" },
		    { name: "AWS IoT Core", value: "awsiot" },
		    { name: "AWS Key Management Service", value: "kms" },
		    { name: "AWS Lambda", value: "lambda" },
		    { name: "AWS Management Console", value: "management-console" },
		    { name: "AWS Marketplace", value: "marketplace" },
		    { name: "AWS OpsWorks", value: "opsworks" },
		    { name: "AWS Resource Access Manager", value: "ram" },
		    { name: "AWS Secrets Manager", value: "secretsmanager" },
		    { name: "AWS Single Sign-On", value: "sso" },
		    { name: "AWS Step Functions", value: "state" },
		    { name: "AWS Storage Gateway", value: "storagegateway" },
		    { name: "AWS Systems Manager", value: "ec2systemsmanager" },
		    { name: "AWS WAF", value: "awswaf" },
		    { name: "AWS WorkDocs", value: "workdocs" },
        { name: "AWS WorkSpaces", value: "workspaces" },
        { name: "AWS WorkMail", value: "workmail" },
		    { name: "AWS X-Ray", value: "xray" },
		    { name: "DevPay", value: "devpay" },
        { name: "Flexible Payments Service", value: "fps" },
        { name: "Internet Connectivity", value: "internetconnectivity" }
    ];

    public async getAwsServices(): Promise<AwsService[]> {
        return Promise.resolve(this.AwsServices);
    }
}
